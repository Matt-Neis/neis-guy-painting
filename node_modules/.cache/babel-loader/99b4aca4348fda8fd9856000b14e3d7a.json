{"ast":null,"code":"import _classCallCheck from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\src\\\\Components\\\\Quotes.js\";\nimport React from 'react';\nimport { Formik } from 'formik'; // forms library\n\nimport { Yup } from 'yup'; // object schema validation\n\nvar Quotes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Quotes, _React$Component);\n\n  function Quotes() {\n    _classCallCheck(this, Quotes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Quotes).apply(this, arguments));\n  }\n\n  _createClass(Quotes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validate: function validate(values) {\n          var errors = {};\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n          setTimeout(function () {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, function (_ref2) {\n        var isSubmitting = _ref2.isSubmitting;\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Field, {\n          type: \"email\",\n          name: \"email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(Field, {\n          type: \"password\",\n          name: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Submit\"));\n      }));\n    }\n  }]);\n\n  return Quotes;\n}(React.Component);\n\nexport default Quotes;","map":{"version":3,"sources":["D:\\Documents\\Web Programming\\React\\neis-guy-painting\\src\\Components\\Quotes.js"],"names":["React","Formik","Yup","Quotes","email","password","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB,C,CAA8B;;AAC9B,SAAQC,GAAR,QAAkB,KAAlB,C,CAAwB;;IAElBC,M;;;;;;;;;;;;;6BACO;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEC,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SADjB;AAEE,QAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAClB,cAAIC,MAAM,GAAG,EAAb;;AACA,cAAI,CAACD,MAAM,CAACF,KAAZ,EAAmB;AACjBG,YAAAA,MAAM,CAACH,KAAP,GAAe,UAAf;AACD,WAFD,MAEO,IACL,CAAC,2CAA2CI,IAA3C,CAAgDF,MAAM,CAACF,KAAvD,CADI,EAEL;AACAG,YAAAA,MAAM,CAACH,KAAP,GAAe,uBAAf;AACD;;AACD,iBAAOG,MAAP;AACD,SAZH;AAaE,QAAA,QAAQ,EAAE,kBAACD,MAAD,QAA+B;AAAA,cAApBG,aAAoB,QAApBA,aAAoB;AACvCC,UAAAA,UAAU,CAAC,YAAM;AACfC,YAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAG,YAAAA,aAAa,CAAC,KAAD,CAAb;AACD,WAHS,EAGP,GAHO,CAAV;AAID,SAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBG;AAAA,YAAGK,YAAH,SAAGA,YAAH;AAAA,eACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADD;AAAA,OApBH,CADQ,CADJ;AAoCH;;;;EAtCgBd,KAAK,CAACe,S;;AAyC3B,eAAeZ,MAAf","sourcesContent":["import React from 'react';\r\nimport {Formik} from 'formik' // forms library\r\nimport {Yup} from 'yup' // object schema validation\r\n\r\nclass Quotes extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        let errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        } else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Field type=\"email\" name=\"email\" />\r\n          <ErrorMessage name=\"email\" component=\"div\" />\r\n          <Field type=\"password\" name=\"password\" />\r\n          <ErrorMessage name=\"password\" component=\"div\" />\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}