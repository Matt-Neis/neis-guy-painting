{"ast":null,"code":"import _classCallCheck from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Web Programming\\\\React\\\\neis-guy-painting\\\\src\\\\Components\\\\Quotes.js\";\nimport React from 'react';\nimport { Formik } from 'formik'; // forms library\n// import {Yup} from 'yup' // object schema validation\n\nimport '../Client/CSS/Quotes.css';\nimport 'gmail-send';\nimport Axios from 'axios';\n\nvar btoa = require('btoa');\n\nvar Quotes =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Quotes, _React$Component);\n\n  function Quotes() {\n    _classCallCheck(this, Quotes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Quotes).apply(this, arguments));\n  }\n\n  _createClass(Quotes, [{\n    key: \"render\",\n    // handleChange = event => {\n    //     this.setState({emailString: event.target.value});\n    // }\n    // // api post call\n    // handleSubmit = event => {\n    //     event.preventDefault();\n    //     const emailString = this.state.message;\n    //     Axios.post(`http://localhost3001:/API/send`, {emailString})\n    //     .then(res => {\n    //         console.log(res);\n    //         console.log(res.data);\n    //     });\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Request A Quote...\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"If you would like to receive a quote, please fill out the form below. You will be contacted within 48 hours.\"), React.createElement(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          phone: '',\n          address: '',\n          city: '',\n          desc: ''\n        },\n        onSubmit: function onSubmit(values, actions) {\n          // this is where json values can be accessed\n          setTimeout(function () {\n            // create the message with the json string\n            var message = \"To: neismj12@gmail.com\\n\" + // this will change\n            \"Subject: Request for Quote Received\\n\" + \"Date:\\r\\n\" + // Removing timestamp\n            \"Message-Id:\\r\\n\" + // Removing message id\n            \"From:\\r\\n\" + // Removing from\n            \"Name - \".concat(values.name, \"\\nEmail - \").concat(values.email, \"\\nPhone - \").concat(values.phone, \"\\nAddress - \").concat(values.address, \"\\nCity - \").concat(values.city, \"\\n\\n\").concat(values.desc); // Adding our actual message - has to be all one line so it looks ugly af\n            // convert the json object to b64 so the gmail api can use it\n\n            var b64String = btoa(message); //console.log(b64String);\n            // alert(JSON.stringify(values, null, 2));\n\n            actions.setSubmitting(false);\n            var url = \"http://localhost:3001/API/send/\".concat(b64String);\n            console.log(url); // plain old javascript for rn\n\n            var request = new XMLHttpRequest();\n            request.open('POST', url, true);\n            request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n            request.send(data); // api call\n\n            Axios.post(url).then(function (res) {\n              console.log(res);\n              console.log(res.data);\n            }).catch(function (err) {\n              console.log(err);\n            });\n          }, 1000);\n        },\n        render: function render(props) {\n          return React.createElement(\"form\", {\n            onSubmit: props.handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            class: \"flex-outer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Name\"), React.createElement(\"input\", {\n            id: \"txtName\",\n            type: \"text\",\n            size: \"16\",\n            placeholder: \"Enter First and Last Name\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.name,\n            name: \"name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, \"E-mail Address\"), React.createElement(\"input\", {\n            id: \"txtEmail\",\n            type: \"text\",\n            placeholder: \"Enter email address here\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.email,\n            name: \"email\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \"Phone Number\"), React.createElement(\"input\", {\n            id: \"txtPhone\",\n            type: \"text\",\n            placeholder: \"xxx-xxx-xxxx\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.phone,\n            name: \"phone\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, \"Street Address\"), React.createElement(\"input\", {\n            id: \"txtAddress\",\n            type: \"text\",\n            size: \"16\",\n            placeholder: \"Enter street address\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.address,\n            name: \"address\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"City\"), React.createElement(\"input\", {\n            id: \"txtCity\",\n            type: \"text\",\n            placeholder: \"Enter City\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.city,\n            name: \"city\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"Description\"), React.createElement(\"textarea\", {\n            id: \"txtDesc\",\n            type: \"text\",\n            rows: \"6\",\n            placeholder: \"Enter a brief description of the service you are requesting\",\n            onChange: props.handleChange,\n            onBlur: props.handleBlur,\n            value: props.values.desc,\n            name: \"desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          })), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, \"Submit\"))), props.errors.name && React.createElement(\"div\", {\n            id: \"feedback\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, props.errors.name));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), \" \", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"\\\"Let me think on that\\\"\")));\n    }\n  }]);\n\n  return Quotes;\n}(React.Component);\n\nexport default Quotes;","map":{"version":3,"sources":["D:\\Documents\\Web Programming\\React\\neis-guy-painting\\src\\Components\\Quotes.js"],"names":["React","Formik","Axios","btoa","require","Quotes","name","email","phone","address","city","desc","values","actions","setTimeout","message","b64String","setSubmitting","url","console","log","request","XMLHttpRequest","open","setRequestHeader","send","data","post","then","res","catch","err","props","handleSubmit","handleChange","handleBlur","errors","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Formik} from 'formik' // forms library\r\n// import {Yup} from 'yup' // object schema validation\r\nimport '../Client/CSS/Quotes.css';\r\nimport 'gmail-send';\r\nimport Axios from 'axios';\r\nconst btoa = require('btoa');\r\n\r\nclass Quotes extends React.Component {\r\n\r\n    // handleChange = event => {\r\n    //     this.setState({emailString: event.target.value});\r\n    // }\r\n\r\n    // // api post call\r\n    // handleSubmit = event => {\r\n    //     event.preventDefault();\r\n\r\n    //     const emailString = this.state.message;\r\n\r\n    //     Axios.post(`http://localhost3001:/API/send`, {emailString})\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //         console.log(res.data);\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Request A Quote...</h2>\r\n                <p>\r\n                    If you would like to receive a quote, please fill out the form below. You will be contacted\r\n                    within 48 hours.\r\n                </p>\r\n                <Formik\r\n                  initialValues={{ name: '', \r\n                                   email: '',\r\n                                   phone: '',\r\n                                   address: '',\r\n                                   city: '',\r\n                                   desc: ''}}\r\n                  onSubmit={(values, actions) => { // this is where json values can be accessed\r\n                    setTimeout(() => {\r\n\r\n                        // create the message with the json string\r\n                        var message = `To: neismj12@gmail.com\\n` + // this will change\r\n                                      `Subject: Request for Quote Received\\n` +\r\n                                      `Date:\\r\\n` + // Removing timestamp\r\n                                      `Message-Id:\\r\\n` + // Removing message id\r\n                                      `From:\\r\\n` + // Removing from\r\n                                      `Name - ${values.name}\\nEmail - ${values.email}\\nPhone - ${values.phone}\\nAddress - ${values.address}\\nCity - ${values.city}\\n\\n${values.desc}` // Adding our actual message - has to be all one line so it looks ugly af\r\n\r\n                        // convert the json object to b64 so the gmail api can use it\r\n                        var b64String = btoa(message);\r\n                        //console.log(b64String);\r\n                        // alert(JSON.stringify(values, null, 2));\r\n                        actions.setSubmitting(false);\r\n\r\n                        var url = `http://localhost:3001/API/send/${b64String}`;\r\n\r\n                        console.log(url);\r\n\r\n                        // plain old javascript for rn\r\n                        var request = new XMLHttpRequest();\r\n                        request.open('POST', url, true);\r\n                        request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n                        request.send(data);\r\n\r\n                        // api call\r\n                        Axios.post(url)\r\n                        .then(res => {\r\n                            console.log(res);\r\n                            console.log(res.data);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n\r\n                    }, 1000);\r\n                  }}\r\n                  render={props => (\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <ul class=\"flex-outer\">\r\n                            <li>\r\n                            <label>Name</label>\r\n                                <input id=\"txtName\"\r\n                                  type=\"text\"\r\n                                  size=\"16\"\r\n                                  placeholder=\"Enter First and Last Name\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.name}\r\n                                  name=\"name\"/>\r\n                            </li>\r\n                            <li>\r\n                                <label>E-mail Address</label>\r\n                                <input id=\"txtEmail\"\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter email address here\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.email}\r\n                                  name=\"email\"/>\r\n                            </li>\r\n                            <li>\r\n                                <label>Phone Number</label>\r\n                                <input id=\"txtPhone\"\r\n                                  type=\"text\"\r\n                                  placeholder=\"xxx-xxx-xxxx\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.phone}\r\n                                  name=\"phone\"/>\r\n                            </li>\r\n                            <li>\r\n                            <label>Street Address</label>\r\n                                <input id=\"txtAddress\"\r\n                                  type=\"text\"\r\n                                  size=\"16\"\r\n                                  placeholder=\"Enter street address\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.address}\r\n                                  name=\"address\"/>\r\n                            </li>\r\n                            <li>\r\n                                <label>City</label>\r\n                                <input id=\"txtCity\"\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter City\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.city}\r\n                                  name=\"city\"/>\r\n                            </li>\r\n                            <li>\r\n                                <label>Description</label>\r\n                                <textarea id=\"txtDesc\"\r\n                                  type=\"text\"\r\n                                  rows=\"6\"\r\n                                  placeholder=\"Enter a brief description of the service you are requesting\"\r\n                                  onChange={props.handleChange}\r\n                                  onBlur={props.handleBlur}\r\n                                  value={props.values.desc}\r\n                                  name=\"desc\"/>\r\n                            </li>\r\n                            <li>\r\n                                <button type=\"submit\">Submit</button>          \r\n                            </li>\r\n                        </ul>\r\n                      {props.errors.name && <div id=\"feedback\">{props.errors.name}</div>}\r\n                    </form>\r\n                  )}\r\n                /> {/* End formik */}\r\n                <p>\r\n                    <b>\"Let me think on that\"</b>\r\n                </p>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quotes;"]},"metadata":{},"sourceType":"module"}